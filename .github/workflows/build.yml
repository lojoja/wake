name: Build

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]
  workflow_call:
    outputs:
      IS_PRERELEASE:
        description: Whether the build is a pre-release version.
        value: ${{ jobs.build.outputs.IS_PRERELEASE }}
      VERSION:
        description: The build version.
        value: ${{ jobs.build.outputs.VERSION }}
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: "3.10"
    outputs:
      IS_PRERELEASE: ${{ steps.set-build-is-prerelease.outputs.IS_PRERELEASE }}
      VERSION: ${{ steps.set-build-version.outputs.VERSION }}
    steps:
      - name: Check out repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      - name: Install poetry
        run: pipx install poetry
      - name: Set up python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
      - name: Set build version
        id: set-build-version
        run: echo "VERSION=$(poetry version --short)" >> $GITHUB_OUTPUT
      - name: Set build pre-release status
        id: set-build-is-prerelease
        run: |
          pre=1
          if [[ ${{ steps.set-build-version.outputs.VERSION }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]
          then
            pre=0
          fi
          echo "IS_PRERELEASE=$pre" >> $GITHUB_OUTPUT
      - name: Build with poetry
        run: poetry build
      - name: Upload build artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
        with:
          name: dist
          path: dist/
          retention-days: 7
